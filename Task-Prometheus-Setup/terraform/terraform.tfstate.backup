{
  "version": 4,
  "terraform_version": "1.6.3",
  "serial": 38,
  "lineage": "c54cbb31-2f20-8dd4-80f1-2131f9943170",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "prometheus-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "prometheus.yml": "apiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: prometheus-server-conf\r\n  labels:\r\n    name: prometheus-server-conf\r\n  namespace: monitoring\r\ndata:\r\n  prometheus.rules: |-\r\n    groups:\r\n    - name: demo alert\r\n      rules:\r\n      - alert: High Pod Memory\r\n        expr: sum(container_memory_usage_bytes) \u003e 1\r\n        for: 1m\r\n        labels:\r\n          severity: slack\r\n        annotations:\r\n          summary: High Memory Usage\r\n  prometheus.yml: |-\r\n    global:\r\n      scrape_interval: 5s\r\n      evaluation_interval: 5s\r\n    rule_files:\r\n      - /etc/prometheus/prometheus.rules\r\n    alerting:\r\n      alertmanagers:\r\n      - scheme: http\r\n        static_configs:\r\n        - targets:\r\n          - \"alertmanager.monitoring.svc:9093\"\r\n    scrape_configs:\r\n      - job_name: 'node-exporter'\r\n        kubernetes_sd_configs:\r\n          - role: endpoints\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_endpoints_name]\r\n          regex: 'node-exporter'\r\n          action: keep\r\n      - job_name: 'kubernetes-apiservers'\r\n        kubernetes_sd_configs:\r\n        - role: endpoints\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\r\n          action: keep\r\n          regex: default;kubernetes;https\r\n      - job_name: 'kubernetes-nodes'\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        kubernetes_sd_configs:\r\n        - role: node\r\n        relabel_configs:\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_node_label_(.+)\r\n        - target_label: __address__\r\n          replacement: kubernetes.default.svc:443\r\n        - source_labels: [__meta_kubernetes_node_name]\r\n          regex: (.+)\r\n          target_label: __metrics_path__\r\n          replacement: /api/v1/nodes/${1}/proxy/metrics\r\n      - job_name: 'kubernetes-pods'\r\n        kubernetes_sd_configs:\r\n        - role: pod\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n          action: keep\r\n          regex: true\r\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n          action: replace\r\n          target_label: __metrics_path__\r\n          regex: (.+)\r\n        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\r\n          action: replace\r\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n          replacement: $1:$2\r\n          target_label: __address__\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_pod_label_(.+)\r\n        - source_labels: [__meta_kubernetes_namespace]\r\n          action: replace\r\n          target_label: kubernetes_namespace\r\n        - source_labels: [__meta_kubernetes_pod_name]\r\n          action: replace\r\n          target_label: kubernetes_pod_name\r\n      - job_name: 'kube-state-metrics'\r\n        static_configs:\r\n          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']\r\n      - job_name: 'kubernetes-cadvisor'\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        kubernetes_sd_configs:\r\n        - role: node\r\n        relabel_configs:\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_node_label_(.+)\r\n        - target_label: __address__\r\n          replacement: kubernetes.default.svc:443\r\n        - source_labels: [__meta_kubernetes_node_name]\r\n          regex: (.+)\r\n          target_label: __metrics_path__\r\n          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\r\n      - job_name: 'kubernetes-service-endpoints'\r\n        kubernetes_sd_configs:\r\n        - role: endpoints\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n          action: keep\r\n          regex: true\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n          action: replace\r\n          target_label: __scheme__\r\n          regex: (https?)\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n          action: replace\r\n          target_label: __metrics_path__\r\n          regex: (.+)\r\n        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n          action: replace\r\n          target_label: __address__\r\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n          replacement: $1:$2\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_service_label_(.+)\r\n        - source_labels: [__meta_kubernetes_namespace]\r\n          action: replace\r\n          target_label: kubernetes_namespace\r\n        - source_labels: [__meta_kubernetes_service_name]\r\n          action: replace\r\n          target_label: kubernetes_name"
            },
            "id": "monitoring/prometheus-config",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prometheus-config",
                "namespace": "monitoring",
                "resource_version": "88442",
                "uid": "4b34ee91-3833-4b23-8f43-bc73094bf4e3"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "alertmanager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/alertmanager",
            "metadata": [
              {
                "annotations": {
                  "prometheus.io/port": "9093",
                  "prometheus.io/scrape": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "alertmanager",
                "namespace": "monitoring",
                "resource_version": "88445",
                "uid": "f662938e-be5d-4606-b881-c5dc49c913ca"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.110.228.216",
                "cluster_ips": [
                  "10.110.228.216"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 31000,
                    "port": 9093,
                    "protocol": "TCP",
                    "target_port": "9093"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "alertmanager"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
