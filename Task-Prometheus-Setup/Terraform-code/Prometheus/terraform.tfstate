{
  "version": 4,
  "terraform_version": "1.6.3",
  "serial": 18,
  "lineage": "59af7d5f-36ce-8171-2112-7ff99df15448",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "prometheus",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prometheus",
                "resource_version": "91121",
                "uid": "5c4727ef-b221-4499-ac58-912b0ab20196"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes",
                  "nodes/proxy",
                  "services",
                  "endpoints",
                  "pods"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [],
                "non_resource_urls": [
                  "/metrics"
                ],
                "resource_names": [],
                "resources": [],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prometheus",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prometheus",
                "resource_version": "91134",
                "uid": "03d5b8f6-5799-4905-b545-aad813a118be"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "prometheus"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "default",
                "namespace": "monitoring"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "kubernetes_cluster_role.prometheus"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "prometheus_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "prometheus-config.yaml": "apiVersion: v1\r\nkind: ConfigMap\r\nmetadata:\r\n  name: prometheus-server-conf\r\n  labels:\r\n    name: prometheus-server-conf\r\n  namespace: monitoring\r\ndata:\r\n  prometheus.rules: |-\r\n    groups:\r\n    - name: demo alert\r\n      rules:\r\n      - alert: High Pod Memory\r\n        expr: sum(container_memory_usage_bytes) \u003e 1\r\n        for: 1m\r\n        labels:\r\n          severity: slack\r\n        annotations:\r\n          summary: High Memory Usage\r\n  prometheus.yml: |-\r\n    global:\r\n      scrape_interval: 5s\r\n      evaluation_interval: 5s\r\n    rule_files:\r\n      - /etc/prometheus/prometheus.rules\r\n    alerting:\r\n      alertmanagers:\r\n      - scheme: http\r\n        static_configs:\r\n        - targets:\r\n          - \"alertmanager.monitoring.svc:9093\"\r\n    scrape_configs:\r\n      - job_name: 'node-exporter'\r\n        kubernetes_sd_configs:\r\n          - role: endpoints\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_endpoints_name]\r\n          regex: 'node-exporter'\r\n          action: keep\r\n      - job_name: 'kubernetes-apiservers'\r\n        kubernetes_sd_configs:\r\n        - role: endpoints\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\r\n          action: keep\r\n          regex: default;kubernetes;https\r\n      - job_name: 'kubernetes-nodes'\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        kubernetes_sd_configs:\r\n        - role: node\r\n        relabel_configs:\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_node_label_(.+)\r\n        - target_label: __address__\r\n          replacement: kubernetes.default.svc:443\r\n        - source_labels: [__meta_kubernetes_node_name]\r\n          regex: (.+)\r\n          target_label: __metrics_path__\r\n          replacement: /api/v1/nodes/${1}/proxy/metrics\r\n      - job_name: 'kubernetes-pods'\r\n        kubernetes_sd_configs:\r\n        - role: pod\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n          action: keep\r\n          regex: true\r\n        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n          action: replace\r\n          target_label: __metrics_path__\r\n          regex: (.+)\r\n        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\r\n          action: replace\r\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n          replacement: $1:$2\r\n          target_label: __address__\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_pod_label_(.+)\r\n        - source_labels: [__meta_kubernetes_namespace]\r\n          action: replace\r\n          target_label: kubernetes_namespace\r\n        - source_labels: [__meta_kubernetes_pod_name]\r\n          action: replace\r\n          target_label: kubernetes_pod_name\r\n      - job_name: 'kube-state-metrics'\r\n        static_configs:\r\n          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']\r\n      - job_name: 'kubernetes-cadvisor'\r\n        scheme: https\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n        kubernetes_sd_configs:\r\n        - role: node\r\n        relabel_configs:\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_node_label_(.+)\r\n        - target_label: __address__\r\n          replacement: kubernetes.default.svc:443\r\n        - source_labels: [__meta_kubernetes_node_name]\r\n          regex: (.+)\r\n          target_label: __metrics_path__\r\n          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor\r\n      - job_name: 'kubernetes-service-endpoints'\r\n        kubernetes_sd_configs:\r\n        - role: endpoints\r\n        relabel_configs:\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n          action: keep\r\n          regex: true\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n          action: replace\r\n          target_label: __scheme__\r\n          regex: (https?)\r\n        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n          action: replace\r\n          target_label: __metrics_path__\r\n          regex: (.+)\r\n        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n          action: replace\r\n          target_label: __address__\r\n          regex: ([^:]+)(?::\\d+)?;(\\d+)\r\n          replacement: $1:$2\r\n        - action: labelmap\r\n          regex: __meta_kubernetes_service_label_(.+)\r\n        - source_labels: [__meta_kubernetes_namespace]\r\n          action: replace\r\n          target_label: kubernetes_namespace\r\n        - source_labels: [__meta_kubernetes_service_name]\r\n          action: replace\r\n          target_label: kubernetes_name"
            },
            "id": "monitoring/prometheus-server-conf",
            "immutable": false,
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "name": "prometheus-server-conf"
                },
                "name": "prometheus-server-conf",
                "namespace": "monitoring",
                "resource_version": "92287",
                "uid": "3151d8d0-ed0f-4966-9e39-d84d35afa5ea"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/prometheus-deployment",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "prometheus-server"
                },
                "name": "prometheus-deployment",
                "namespace": "monitoring",
                "resource_version": "92430",
                "uid": "0b69424f-2538-4e99-8fd6-1159eaeac6bb"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "prometheus-server"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": null,
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "prometheus-server"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "--storage.tsdb.retention.time=12h",
                              "--config.file=/etc/prometheus/prometheus.yml",
                              "--storage.tsdb.path=/prometheus/"
                            ],
                            "command": null,
                            "env": [],
                            "env_from": [],
                            "image": "prom/prometheus",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "prometheus",
                            "port": [
                              {
                                "container_port": 9090,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "1",
                                  "memory": "1Gi"
                                },
                                "requests": {
                                  "cpu": "500m",
                                  "memory": "500M"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/etc/prometheus/",
                                "mount_propagation": "None",
                                "name": "prometheus-config-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/prometheus/",
                                "mount_propagation": "None",
                                "name": "prometheus-storage-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": null,
                        "os": [],
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "runtime_class_name": "",
                        "scheduler_name": "default-scheduler",
                        "security_context": [],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "prometheus-server-conf",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "prometheus-config-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "ephemeral": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "prometheus-storage-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/prometheus-service",
            "metadata": [
              {
                "annotations": {
                  "prometheus.io/port": "9090",
                  "prometheus.io/scrape": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prometheus-service",
                "namespace": "monitoring",
                "resource_version": "90681",
                "uid": "30d191fd-be71-4b7d-9019-6e491da082f4"
              }
            ],
            "spec": [
              {
                "allocate_load_balancer_node_ports": true,
                "cluster_ip": "10.106.174.117",
                "cluster_ips": [
                  "10.106.174.117"
                ],
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                  "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": "",
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "app_protocol": "",
                    "name": "",
                    "node_port": 30000,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "9090"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "prometheus-server"
                },
                "session_affinity": "None",
                "session_affinity_config": [],
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
